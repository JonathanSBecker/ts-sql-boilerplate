import { NextFunction, Request, Response } from 'express';

import SystemError from '../../error/SystemError';
import logger from '../../utils/logger';

// DO NOT EDIT THIS FILE

/**
  Middleware component, see src/utils/error-wrapper for use in controllers

  WARNING: DO NOT SEND SENSITIVE INFORMATION IN ERROR MESSAGES
  DO NOT SEND RANDOM STACK TRACES, LOG THEM INSTEAD AND LEAVE A BREADCRUMB IN THE ERROR MESSAGE.
 */
const errorHandler = (
  error: Error,
  req: Request,
  res: Response,
  next: NextFunction,
) => {
  if (error instanceof SystemError) {
    if (error.statusCode < 400 || error.statusCode >= 500) {
      logger.info(error.message);
    }
    return res.status(error.statusCode).send({ message: error.message });
  } else {
    logger.error('An unknown Error has occurred:', JSON.stringify(error));
    const e = new SystemError();
    return res.status(e.statusCode).send({
      message: e.message,
    });
  }
};

export default errorHandler;
